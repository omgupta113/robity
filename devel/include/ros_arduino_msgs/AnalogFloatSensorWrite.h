// Generated by gencpp from file ros_arduino_msgs/AnalogFloatSensorWrite.msg
// DO NOT EDIT!


#ifndef ROS_ARDUINO_MSGS_MESSAGE_ANALOGFLOATSENSORWRITE_H
#define ROS_ARDUINO_MSGS_MESSAGE_ANALOGFLOATSENSORWRITE_H

#include <ros/service_traits.h>


#include <ros_arduino_msgs/AnalogFloatSensorWriteRequest.h>
#include <ros_arduino_msgs/AnalogFloatSensorWriteResponse.h>


namespace ros_arduino_msgs
{

struct AnalogFloatSensorWrite
{

typedef AnalogFloatSensorWriteRequest Request;
typedef AnalogFloatSensorWriteResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AnalogFloatSensorWrite
} // namespace ros_arduino_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWrite > {
  static const char* value()
  {
    return "0aca93dcf6d857f0e5a0dc6be1eaa9fb";
  }

  static const char* value(const ::ros_arduino_msgs::AnalogFloatSensorWrite&) { return value(); }
};

template<>
struct DataType< ::ros_arduino_msgs::AnalogFloatSensorWrite > {
  static const char* value()
  {
    return "ros_arduino_msgs/AnalogFloatSensorWrite";
  }

  static const char* value(const ::ros_arduino_msgs::AnalogFloatSensorWrite&) { return value(); }
};


// service_traits::MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWriteRequest> should match
// service_traits::MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWrite >
template<>
struct MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWriteRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWrite >::value();
  }
  static const char* value(const ::ros_arduino_msgs::AnalogFloatSensorWriteRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_arduino_msgs::AnalogFloatSensorWriteRequest> should match
// service_traits::DataType< ::ros_arduino_msgs::AnalogFloatSensorWrite >
template<>
struct DataType< ::ros_arduino_msgs::AnalogFloatSensorWriteRequest>
{
  static const char* value()
  {
    return DataType< ::ros_arduino_msgs::AnalogFloatSensorWrite >::value();
  }
  static const char* value(const ::ros_arduino_msgs::AnalogFloatSensorWriteRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWriteResponse> should match
// service_traits::MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWrite >
template<>
struct MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWriteResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ros_arduino_msgs::AnalogFloatSensorWrite >::value();
  }
  static const char* value(const ::ros_arduino_msgs::AnalogFloatSensorWriteResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ros_arduino_msgs::AnalogFloatSensorWriteResponse> should match
// service_traits::DataType< ::ros_arduino_msgs::AnalogFloatSensorWrite >
template<>
struct DataType< ::ros_arduino_msgs::AnalogFloatSensorWriteResponse>
{
  static const char* value()
  {
    return DataType< ::ros_arduino_msgs::AnalogFloatSensorWrite >::value();
  }
  static const char* value(const ::ros_arduino_msgs::AnalogFloatSensorWriteResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROS_ARDUINO_MSGS_MESSAGE_ANALOGFLOATSENSORWRITE_H
